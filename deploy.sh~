#!/bin/bash

# Enable strict error handling
set -eo pipefail

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Error handling function
trap 'echo -e "${RED}Error occurred at line $LINENO. Exiting...${NC}"; exit 1' ERR

# Check if we're in the project root
check_directory() {
    if [[ ! -f "package.json" || ! -f "server.js" ]]; then
        echo -e "${RED}Error: Must be run from project root directory!${NC}"
        exit 1
    fi
}

# Validate configuration
check_config() {
    if [[ ! -f "config.json" ]]; then
        echo -e "${RED}Error: config.json not found!${NC}"
        exit 1
    fi
}

# Create .gitignore if missing
create_gitignore() {
    if [[ ! -f ".gitignore" ]]; then
        echo -e "${YELLOW}Creating .gitignore file...${NC}"
        cat > .gitignore <<EOL
# General
node_modules/
dist/
build/
*.log
logs/
app.log
app.pid
.DS_Store

# Environment
.env
.env.local
.env.development
.env.production

# Certificates
*.pem
*.key
*.crt

# Configuration
config.json

# IDE
.idea/
.vscode/
*.swp
*.swo

# Debug files
debug.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Temporary files
*.tmp
*.temp

# Test artifacts
coverage/
.nyc_output/

# Build files
*.exe
*.dll
*.so
*.dylib

# Local development
.cache/
.parcel-cache/
EOL
    fi
}

# Check for sensitive files
check_sensitive_files() {
    local sensitive_files=("config.json" "*.pem" "*.key")
    
    for pattern in "${sensitive_files[@]}"; do
        if [[ $(git ls-files "$pattern" | wc -l) -gt 0 ]]; then
            echo -e "${RED}Error: Sensitive files ($pattern) detected in repository!${NC}"
            echo -e "Remove them with: git rm --cached $pattern"
            exit 1
        fi
    done
}

# Main deployment process
deploy() {
    local commit_msg="$1"
    
    echo -e "${YELLOW}Starting deployment...${NC}"
    
    check_directory
    check_config
    create_gitignore
    check_sensitive_files

    echo -e "${YELLOW}Checking repository status...${NC}"
    git status

    echo -e "${YELLOW}Adding files to git...${NC}"
    git add .

    echo -e "${YELLOW}Committing changes...${NC}"
    git commit -m "$commit_msg" || {
        echo -e "${RED}Commit failed. Possible causes:"
        echo -e "- No changes to commit"
        echo -e "- Invalid commit message format${NC}"
        exit 1
    }

    echo -e "${YELLOW}Pushing to GitHub...${NC}"
    git push origin master || {
        echo -e "${RED}Push failed. Possible causes:"
        echo -e "- Network connectivity issues"
        echo -e "- Permission problems"
        echo -e "- Outdated local branch${NC}"
        exit 1
    }

    echo -e "${GREEN}âœ… Successfully deployed!${NC}"
}

# Check commit message
if [[ $# -eq 0 ]]; then
    echo -e "${RED}Error: Commit message required!${NC}"
    echo -e "Usage: ./deploy.sh \"Your commit message\""
    exit 1
fi

# Execute deployment
deploy "$1"
